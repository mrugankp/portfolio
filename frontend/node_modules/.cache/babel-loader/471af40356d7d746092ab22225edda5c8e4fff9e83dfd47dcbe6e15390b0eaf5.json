{"ast":null,"code":"var _jsxFileName = \"/Users/mrugankpednekar/Desktop/Portfolio/portfolio/frontend/src/components/FullScreenSections.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './styles.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FullScreenSections = () => {\n  _s();\n  const sections = ['about', 'experience', 'projects', 'blog'];\n  const sectionRefs = useRef(sections.map(() => /*#__PURE__*/React.createRef()));\n  useEffect(() => {\n    const observerOptions = {\n      threshold: 0.5\n    };\n    const observerCallback = entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('animate');\n        } else {\n          entry.target.classList.remove('animate');\n        }\n      });\n    };\n    const observer = new IntersectionObserver(observerCallback, observerOptions);\n    sectionRefs.current.forEach(ref => {\n      if (ref.current) {\n        observer.observe(ref.current);\n      }\n    });\n    return () => {\n      sectionRefs.current.forEach(ref => {\n        if (ref.current) {\n          observer.unobserve(ref.current);\n        }\n      });\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: sections.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      id: section,\n      ref: sectionRefs.current[index],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-content\",\n        children: section === 'about' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"About Me\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Hi, I'm Mrugank Pednekar, a passionate Computer Engineering student at the University of Wisconsin-Madison. With a GPA of 3.9 and experience in Machine Learning, AI, and Product Management, I love blending tech with creativity. I've led teams to build innovative products, like a Fitbit for truck drivers, and developed AI tools to help people track personal growth. Let's create something amazing together!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: section.charAt(0).toUpperCase() + section.slice(1)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Details about my \", section, \"...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), index < sections.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"arrow down\",\n          onClick: () => sectionRefs.current[index + 1].current.scrollIntoView({\n            behavior: 'smooth'\n          }),\n          children: \"\\u2193\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(FullScreenSections, \"1dyBTK6NRWa3lXdaIJEZ/0AdanM=\");\n_c = FullScreenSections;\nexport default FullScreenSections;\nvar _c;\n$RefreshReg$(_c, \"FullScreenSections\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","FullScreenSections","_s","sections","sectionRefs","map","createRef","observerOptions","threshold","observerCallback","entries","forEach","entry","isIntersecting","target","classList","add","remove","observer","IntersectionObserver","current","ref","observe","unobserve","className","children","section","index","id","fileName","_jsxFileName","lineNumber","columnNumber","charAt","toUpperCase","slice","length","onClick","scrollIntoView","behavior","_c","$RefreshReg$"],"sources":["/Users/mrugankpednekar/Desktop/Portfolio/portfolio/frontend/src/components/FullScreenSections.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './styles.css';\n\nconst FullScreenSections = () => {\n  const sections = ['about', 'experience', 'projects', 'blog'];\n  const sectionRefs = useRef(sections.map(() => React.createRef()));\n\n  useEffect(() => {\n    const observerOptions = {\n      threshold: 0.5\n    };\n\n    const observerCallback = (entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('animate');\n        } else {\n          entry.target.classList.remove('animate');\n        }\n      });\n    };\n\n    const observer = new IntersectionObserver(observerCallback, observerOptions);\n\n    sectionRefs.current.forEach(ref => {\n      if (ref.current) {\n        observer.observe(ref.current);\n      }\n    });\n\n    return () => {\n      sectionRefs.current.forEach(ref => {\n        if (ref.current) {\n          observer.unobserve(ref.current);\n        }\n      });\n    };\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {sections.map((section, index) => (\n        <div\n          className=\"section\"\n          id={section}\n          key={section}\n          ref={sectionRefs.current[index]}\n        >\n          <div className=\"section-content\">\n            {section === 'about' ? (\n              <>\n                <h1>About Me</h1>\n                <p>\n                  Hi, I'm Mrugank Pednekar, a passionate Computer Engineering student at the University of Wisconsin-Madison.\n                  With a GPA of 3.9 and experience in Machine Learning, AI, and Product Management, I love blending tech with creativity.\n                  I've led teams to build innovative products, like a Fitbit for truck drivers, and developed AI tools to help people track personal growth.\n                  Let's create something amazing together!\n                </p>\n              </>\n            ) : (\n              <>\n                <h1>{section.charAt(0).toUpperCase() + section.slice(1)}</h1>\n                <p>Details about my {section}...</p>\n              </>\n            )}\n          </div>\n          {index < sections.length - 1 && (\n            <div className=\"arrow-container\">\n              <div className=\"arrow down\" onClick={() => sectionRefs.current[index + 1].current.scrollIntoView({ behavior: 'smooth' })}>&#x2193;</div>\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default FullScreenSections;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}