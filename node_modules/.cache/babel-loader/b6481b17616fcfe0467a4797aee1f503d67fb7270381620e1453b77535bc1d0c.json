{"ast":null,"code":"var _jsxFileName = \"/Users/mrugankpednekar/Desktop/Portfolio/portfolio/frontend/src/components/FullScreenSections.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport './FullScreenSections.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FullScreenSections = () => {\n  _s();\n  const sections = ['about', 'experience', 'projects', 'blog'];\n  const sectionRefs = useRef(sections.map(() => /*#__PURE__*/React.createRef()));\n  useEffect(() => {\n    const observerOptions = {\n      threshold: 0.5\n    };\n    const observerCallback = entries => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('animate');\n        } else {\n          entry.target.classList.remove('animate');\n        }\n      });\n    };\n    const observer = new IntersectionObserver(observerCallback, observerOptions);\n    sectionRefs.current.forEach(ref => {\n      if (ref.current) {\n        observer.observe(ref.current);\n      }\n    });\n    const handleScroll = () => {\n      const container = document.querySelector('.container');\n      let closest = sectionRefs.current[0].current;\n      let closestDist = Math.abs(container.scrollTop - closest.offsetTop);\n      sectionRefs.current.forEach(ref => {\n        const section = ref.current;\n        const distance = Math.abs(container.scrollTop - section.offsetTop);\n        if (distance < closestDist) {\n          closest = section;\n          closestDist = distance;\n        }\n      });\n      closest.scrollIntoView({\n        behavior: 'smooth'\n      });\n    };\n    const container = document.querySelector('.container');\n    container.addEventListener('scroll', handleScroll);\n    return () => {\n      sectionRefs.current.forEach(ref => {\n        if (ref.current) {\n          observer.unobserve(ref.current);\n        }\n      });\n      container.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: sections.map((section, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section\",\n      id: section,\n      ref: sectionRefs.current[index],\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: section.charAt(0).toUpperCase() + section.slice(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Details about my \", section, \"...\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), index < sections.length - 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"arrow down\",\n        onClick: () => sectionRefs.current[index + 1].current.scrollIntoView({\n          behavior: 'smooth'\n        }),\n        children: \"\\u2193\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, section, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(FullScreenSections, \"1dyBTK6NRWa3lXdaIJEZ/0AdanM=\");\n_c = FullScreenSections;\nexport default FullScreenSections;\nvar _c;\n$RefreshReg$(_c, \"FullScreenSections\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","FullScreenSections","_s","sections","sectionRefs","map","createRef","observerOptions","threshold","observerCallback","entries","forEach","entry","isIntersecting","target","classList","add","remove","observer","IntersectionObserver","current","ref","observe","handleScroll","container","document","querySelector","closest","closestDist","Math","abs","scrollTop","offsetTop","section","distance","scrollIntoView","behavior","addEventListener","unobserve","removeEventListener","className","children","index","id","charAt","toUpperCase","slice","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","_c","$RefreshReg$"],"sources":["/Users/mrugankpednekar/Desktop/Portfolio/portfolio/frontend/src/components/FullScreenSections.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport './FullScreenSections.css';\n\nconst FullScreenSections = () => {\n  const sections = ['about', 'experience', 'projects', 'blog'];\n  const sectionRefs = useRef(sections.map(() => React.createRef()));\n\n  useEffect(() => {\n    const observerOptions = {\n      threshold: 0.5\n    };\n\n    const observerCallback = (entries) => {\n      entries.forEach(entry => {\n        if (entry.isIntersecting) {\n          entry.target.classList.add('animate');\n        } else {\n          entry.target.classList.remove('animate');\n        }\n      });\n    };\n\n    const observer = new IntersectionObserver(observerCallback, observerOptions);\n\n    sectionRefs.current.forEach(ref => {\n      if (ref.current) {\n        observer.observe(ref.current);\n      }\n    });\n\n    const handleScroll = () => {\n      const container = document.querySelector('.container');\n      let closest = sectionRefs.current[0].current;\n      let closestDist = Math.abs(container.scrollTop - closest.offsetTop);\n\n      sectionRefs.current.forEach(ref => {\n        const section = ref.current;\n        const distance = Math.abs(container.scrollTop - section.offsetTop);\n        if (distance < closestDist) {\n          closest = section;\n          closestDist = distance;\n        }\n      });\n\n      closest.scrollIntoView({ behavior: 'smooth' });\n    };\n\n    const container = document.querySelector('.container');\n    container.addEventListener('scroll', handleScroll);\n\n    return () => {\n      sectionRefs.current.forEach(ref => {\n        if (ref.current) {\n          observer.unobserve(ref.current);\n        }\n      });\n      container.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n\n  return (\n    <div className=\"container\">\n      {sections.map((section, index) => (\n        <div\n          className=\"section\"\n          id={section}\n          key={section}\n          ref={sectionRefs.current[index]}\n        >\n          <div>\n            <h1>{section.charAt(0).toUpperCase() + section.slice(1)}</h1>\n            <p>Details about my {section}...</p>\n          </div>\n          {index < sections.length - 1 && (\n            <div className=\"arrow down\" onClick={() => sectionRefs.current[index + 1].current.scrollIntoView({ behavior: 'smooth' })}>&#x2193;</div>\n          )}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default FullScreenSections;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}