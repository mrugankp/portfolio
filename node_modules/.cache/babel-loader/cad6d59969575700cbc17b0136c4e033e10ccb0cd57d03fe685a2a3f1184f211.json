{"ast":null,"code":"var _jsxFileName = \"/Users/mrugankpednekar/Desktop/Portfolio/portfolio/frontend/src/components/SingleBlog.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SingleBlog = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [blog, setBlog] = useState({});\n  useEffect(() => {\n    axios.get(`/blogs/${id}`).then(response => setBlog(response.data)).catch(error => console.error('Error fetching blog:', error));\n  }, [id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: blog.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: blog.content\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"small\", {\n        children: new Date(blog.date).toLocaleDateString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(SingleBlog, \"l+TtTEWuJVgyA+jLLbFICqTsPJY=\", false, function () {\n  return [useParams];\n});\n_c = SingleBlog;\nexport default SingleBlog;\nvar _c;\n$RefreshReg$(_c, \"SingleBlog\");","map":{"version":3,"names":["React","useState","useEffect","useParams","axios","jsxDEV","_jsxDEV","SingleBlog","_s","id","blog","setBlog","get","then","response","data","catch","error","console","children","title","fileName","_jsxFileName","lineNumber","columnNumber","content","Date","date","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/mrugankpednekar/Desktop/Portfolio/portfolio/frontend/src/components/SingleBlog.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\n\nconst SingleBlog = () => {\n  const { id } = useParams();\n  const [blog, setBlog] = useState({});\n\n  useEffect(() => {\n    axios.get(`/blogs/${id}`)\n      .then(response => setBlog(response.data))\n      .catch(error => console.error('Error fetching blog:', error));\n  }, [id]);\n\n  return (\n    <div>\n      <h1>{blog.title}</h1>\n      <p>{blog.content}</p>\n      <p><small>{new Date(blog.date).toLocaleDateString()}</small></p>\n    </div>\n  );\n}\n\nexport default SingleBlog;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACO,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAEpCC,SAAS,CAAC,MAAM;IACdE,KAAK,CAACQ,GAAG,CAAE,UAASH,EAAG,EAAC,CAAC,CACtBI,IAAI,CAACC,QAAQ,IAAIH,OAAO,CAACG,QAAQ,CAACC,IAAI,CAAC,CAAC,CACxCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACjE,CAAC,EAAE,CAACR,EAAE,CAAC,CAAC;EAER,oBACEH,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAKT,IAAI,CAACU;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACrBlB,OAAA;MAAAa,QAAA,EAAIT,IAAI,CAACe;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBlB,OAAA;MAAAa,QAAA,eAAGb,OAAA;QAAAa,QAAA,EAAQ,IAAIO,IAAI,CAAChB,IAAI,CAACiB,IAAI,CAAC,CAACC,kBAAkB,CAAC;MAAC;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7D,CAAC;AAEV,CAAC;AAAAhB,EAAA,CAjBKD,UAAU;EAAA,QACCJ,SAAS;AAAA;AAAA0B,EAAA,GADpBtB,UAAU;AAmBhB,eAAeA,UAAU;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}